/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.todo.example.api;

import com.todo.example.model.CompletedTask;
import com.todo.example.model.Task;
import com.todo.example.model.TodoList;
import java.util.UUID;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-11-28T16:05:18.733+05:30")

@Api(value = "list", description = "the list API")
public interface ListApi {

    @ApiOperation(value = "add a new task to the todo list", nickname = "addTask", notes = "", tags={ "todo", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "item created"),
        @ApiResponse(code = 400, message = "invalid input, object invalid"),
        @ApiResponse(code = 409, message = "an existing item already exists") })
    @RequestMapping(value = "/list/{id}/tasks",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Void> addTask(@ApiParam(value = "Unique identifier of the list to add the task for",required=true) @PathVariable("id") UUID id,@ApiParam(value = "task to add"  )  @Valid @RequestBody Task task);


    @ApiOperation(value = "return the specified todo list", nickname = "getList", notes = "", response = TodoList.class, tags={ "todo", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = TodoList.class),
        @ApiResponse(code = 400, message = "Invalid id supplied"),
        @ApiResponse(code = 404, message = "List not found") })
    @RequestMapping(value = "/list/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<TodoList> getList(@ApiParam(value = "The unique identifier of the list",required=true) @PathVariable("id") UUID id);


    @ApiOperation(value = "updates the completed state of a task", nickname = "putTask", notes = "", tags={ "todo", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "item updated"),
        @ApiResponse(code = 400, message = "invalid input, object invalid") })
    @RequestMapping(value = "/list/{id}/task/{taskId}/complete",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Void> putTask(@ApiParam(value = "Unique identifier of the list to add the task for",required=true) @PathVariable("id") UUID id,@ApiParam(value = "Unique identifier task to complete",required=true) @PathVariable("taskId") UUID taskId,@ApiParam(value = "task to add"  )  @Valid @RequestBody CompletedTask task);

}
